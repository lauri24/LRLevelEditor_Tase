/* Generated by MyraPad at 26.01.2020 22:50:18 */
using Myra.Assets;
using Myra.Graphics2D;
using Myra.Graphics2D.TextureAtlases;
using Myra.Graphics2D.UI;
using Myra.Graphics2D.Brushes;
using monoGameCP;
#if !XENKO
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#else
using Xenko.Core.Mathematics;
#endif

namespace UIMenusAndControls
{
	partial class TilePropertiesWindow: Window
	{
		
		private void BuildUI(TileObject tile)
		{
			var label1 = new Label();
			label1.Text = "Name";

			propertyName = new TextBox();
			propertyName.Text = "PropertyName";
			propertyName.Left = 10;
			propertyName.MinWidth = 100;
			propertyName.MaxWidth = 100;
			propertyName.Id = "propertyName";

			var horizontalStackPanel1 = new HorizontalStackPanel();
			horizontalStackPanel1.Widgets.Add(label1);
			horizontalStackPanel1.Widgets.Add(propertyName);

			var label2 = new Label();
			label2.Text = "IsCollidable";

			isCollidable = new CheckBox();
			isCollidable.Left = 10;
			isCollidable.Id = "isCollidable";

			var label3 = new Label();
			label3.Text = "isFloor";
			label3.Left = 30;

			isFloor = new CheckBox();
			isFloor.Left = 40;
			isFloor.Id = "isFloor";

			var label4 = new Label();
			label4.Text = "IsBrakeable";
			label4.Left = 60;

			isBrakable = new CheckBox();
			isBrakable.Left = 70;
			isBrakable.Id = "isBrakable";

			var label5 = new Label();
			label5.Text = "isMoving";
			label5.Left = 90;

			isMoving = new CheckBox();
			isMoving.Left = 100;
			isMoving.Id = "isMoving";

			var horizontalStackPanel2 = new HorizontalStackPanel();
			horizontalStackPanel2.Widgets.Add(label2);
			horizontalStackPanel2.Widgets.Add(isCollidable);
			horizontalStackPanel2.Widgets.Add(label3);
			horizontalStackPanel2.Widgets.Add(isFloor);
			horizontalStackPanel2.Widgets.Add(label4);
			horizontalStackPanel2.Widgets.Add(isBrakable);
			horizontalStackPanel2.Widgets.Add(label5);
			horizontalStackPanel2.Widgets.Add(isMoving);

			var label6 = new Label();
			label6.Text = "Add new Properties";

			var label7 = new Label();
			label7.Text = "Key";
			label7.Left = 20;

			properyKey = new TextBox();
			properyKey.Text = "Key propery";
			properyKey.Left = 30;
			properyKey.MinWidth = 50;
			properyKey.MaxWidth = 100;
			properyKey.Id = "properyKey";

			var label8 = new Label();
			label8.Text = "Value";
			label8.Left = 100;

			propertyValue = new TextBox();
			propertyValue.Text = "Value property";
			propertyValue.Left = 110;
			propertyValue.MinWidth = 50;
			propertyValue.MaxWidth = 100;
			propertyValue.Id = "propertyValue";

			addProperty = new TextButton();
			addProperty.Text = "Add";
			addProperty.Left = 140;
			addProperty.Id = "addProperty";

			var horizontalStackPanel3 = new HorizontalStackPanel();
			horizontalStackPanel3.Widgets.Add(label6);
			horizontalStackPanel3.Widgets.Add(label7);
			horizontalStackPanel3.Widgets.Add(properyKey);
			horizontalStackPanel3.Widgets.Add(label8);
			horizontalStackPanel3.Widgets.Add(propertyValue);
			horizontalStackPanel3.Widgets.Add(addProperty);

			saveProperties = new TextButton();
			saveProperties.Text = "Save";
			saveProperties.Id = "saveProperties";

			var horizontalStackPanel4 = new HorizontalStackPanel();
			horizontalStackPanel4.Widgets.Add(saveProperties);

			var verticalStackPanel1 = new VerticalStackPanel();
			verticalStackPanel1.Widgets.Add(horizontalStackPanel1);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel2);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel3);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel4);

			
			Title = "Tile Properties";
			Left = 123;
			Top = 7;
			MinWidth = 700;
			MaxWidth = 700;
			MinHeight = 500;
			MaxHeight = 600;
			Content = verticalStackPanel1;
		}

		
		public TextBox propertyName;
		public CheckBox isCollidable;
		public CheckBox isFloor;
		public CheckBox isBrakable;
		public CheckBox isMoving;
		public TextBox properyKey;
		public TextBox propertyValue;
		public TextButton addProperty;
		public TextButton saveProperties;
	}
}